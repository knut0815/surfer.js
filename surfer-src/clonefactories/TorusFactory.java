package clonefactories;

public class TorusFactory
{
    public java.lang.Object createClone()
    {
	try
	{
	    polynomialVariable_297= new de.mfo.jsurfer.algebra.PolynomialVariable();
	    polynomialVariable$Var_299= de.mfo.jsurfer.algebra.PolynomialVariable.Var.y;
	    polynomialVariable$Var_312= de.mfo.jsurfer.algebra.PolynomialVariable.Var.x;
	    polynomialPower_348= new de.mfo.jsurfer.algebra.PolynomialPower();
	    integer_352= new java.lang.Integer(2);
	    polynomialSubtraction_353= new de.mfo.jsurfer.algebra.PolynomialSubtraction();
	    doubleBinaryOperation_356= new de.mfo.jsurfer.algebra.DoubleBinaryOperation();
	    doubleValue_359= new de.mfo.jsurfer.algebra.DoubleValue();
	    double_362= new java.lang.Double(2.0D);
	    doubleVariable_363= new de.mfo.jsurfer.algebra.DoubleVariable();
	    string_365= "b";
	    doubleBinaryOperation$Op_332= de.mfo.jsurfer.algebra.DoubleBinaryOperation.Op.pow;
	    polynomialAddition_366= new de.mfo.jsurfer.algebra.PolynomialAddition();
	    doubleBinaryOperation_369= new de.mfo.jsurfer.algebra.DoubleBinaryOperation();
	    doubleValue_372= new de.mfo.jsurfer.algebra.DoubleValue();
	    double_375= new java.lang.Double(2.0D);
	    doubleVariable_376= new de.mfo.jsurfer.algebra.DoubleVariable();
	    string_378= "a";
	    polynomialAddition_379= new de.mfo.jsurfer.algebra.PolynomialAddition();
	    polynomialPower_382= new de.mfo.jsurfer.algebra.PolynomialPower();
	    integer_386= new java.lang.Integer(2);
	    polynomialVariable_387= new de.mfo.jsurfer.algebra.PolynomialVariable();
	    polynomialVariable$Var_389= de.mfo.jsurfer.algebra.PolynomialVariable.Var.z;
	    polynomialAddition_394= new de.mfo.jsurfer.algebra.PolynomialAddition();
	    polynomialPower_397= new de.mfo.jsurfer.algebra.PolynomialPower();
	    integer_401= new java.lang.Integer(2);
	    polynomialVariable_402= new de.mfo.jsurfer.algebra.PolynomialVariable();
	    polynomialPower_403= new de.mfo.jsurfer.algebra.PolynomialPower();
	    integer_407= new java.lang.Integer(2);
	    polynomialVariable_408= new de.mfo.jsurfer.algebra.PolynomialVariable();
	    float_100= new java.lang.Float(0.5F);
	    double_88= new java.lang.Double(100.0D);
	    double_89= new java.lang.Double(100.0D);
	    double_90= new java.lang.Double(-100.0D);
	    polynomialPower_305= new de.mfo.jsurfer.algebra.PolynomialPower();
	    integer_309= new java.lang.Integer(2);
	    polynomialVariable_310= new de.mfo.jsurfer.algebra.PolynomialVariable();
	    double_449= new java.lang.Double(0.5D);
	    string_450= "b";
	    float_144= new java.lang.Float(0.3F);
	    double_136= new java.lang.Double(100.0D);
	    double_137= new java.lang.Double(-100.0D);
	    polynomialSubtraction_283= new de.mfo.jsurfer.algebra.PolynomialSubtraction();
	    polynomialMultiplication_286= new de.mfo.jsurfer.algebra.PolynomialMultiplication();
	    polynomialAddition_289= new de.mfo.jsurfer.algebra.PolynomialAddition();
	    polynomialPower_292= new de.mfo.jsurfer.algebra.PolynomialPower();
	    integer_296= new java.lang.Integer(2);
	    doubleBinaryOperation_317= new de.mfo.jsurfer.algebra.DoubleBinaryOperation();
	    doubleBinaryOperation_321= new de.mfo.jsurfer.algebra.DoubleBinaryOperation();
	    doubleValue_325= new de.mfo.jsurfer.algebra.DoubleValue();
	    double_328= new java.lang.Double(2.0D);
	    doubleVariable_329= new de.mfo.jsurfer.algebra.DoubleVariable();
	    string_331= "b";
	    doubleValue_338= new de.mfo.jsurfer.algebra.DoubleValue();
	    double_341= new java.lang.Double(4.0D);
	    doubleBinaryOperation$Op_342= de.mfo.jsurfer.algebra.DoubleBinaryOperation.Op.mult;
	    cPUAlgebraicSurfaceRenderer_1= new de.mfo.jsurfer.rendering.cpu.CPUAlgebraicSurfaceRenderer();
	    integer_51= new java.lang.Integer(4);
	    string_58= "(x^2+y^2+z^2+a^2-b^2)^2-4*b^2*(x^2+y^2)";
	    float_39= new java.lang.Float(0.8F);
	    float_49= new java.lang.Float(30.0F);
	    float_50= new java.lang.Float(0.4F);
	    float_46= new java.lang.Float(0.05882353F);
	    float_47= new java.lang.Float(0.25882354F);
	    float_48= new java.lang.Float(0.9411765F);
	    double_277= new java.lang.Double(-0.0D);
	    double_278= new java.lang.Double(-0.0D);
	    double_279= new java.lang.Double(-1.0D);
	    float_499= new java.lang.Float(0.8F);
	    float_509= new java.lang.Float(30.0F);
	    float_510= new java.lang.Float(0.4F);
	    float_123= new java.lang.Float(0.7F);
	    double_114= new java.lang.Double(100.0D);
	    double_115= new java.lang.Double(100.0D);
	    double_116= new java.lang.Double(100.0D);
	    double_455= new java.lang.Double(0.5D);
	    string_456= "a";
	    float_506= new java.lang.Float(0.101960786F);
	    float_507= new java.lang.Float(0.41960785F);
	    float_508= new java.lang.Float(0.87058824F);
	    lightSource_array_25= cPUAlgebraicSurfaceRenderer_1.getLightSources();
	    lightSource_67= lightSource_array_25[0];
	    point3d_79= lightSource_67.getPosition();
	    lightSource_69= lightSource_array_25[2];
	    point3d_127= lightSource_69.getPosition();
	    material_23= cPUAlgebraicSurfaceRenderer_1.getFrontMaterial();
	    color3f_34= material_23.getColor();
	    camera_22= cPUAlgebraicSurfaceRenderer_1.getCamera();
	    matrix4d_244= camera_22.getTransform();
	    material_24= cPUAlgebraicSurfaceRenderer_1.getBackMaterial();
	    lightSource_68= lightSource_array_25[1];
	    point3d_105= lightSource_68.getPosition();
	    simplificator_21= cPUAlgebraicSurfaceRenderer_1.getParameterSubstitutor();
	    hashMap_442= (java.util.HashMap) simplificator_21.getDict();
	    vector_514= new java.util.Vector(hashMap_442.entrySet());
	    color3f_494= material_24.getColor();
	    polynomialVariable_297.setVariable(polynomialVariable$Var_299);
	    polynomialPower_348.setExponent(integer_352);
	    doubleValue_359.setValue1(double_362);
	    doubleBinaryOperation_356.setSecondOperand(doubleValue_359);
	    doubleVariable_363.setName(string_365);
	    doubleBinaryOperation_356.setFirstOperand(doubleVariable_363);
	    doubleBinaryOperation_356.setOperator(doubleBinaryOperation$Op_332);
	    polynomialSubtraction_353.setSecondOperand(doubleBinaryOperation_356);
	    doubleValue_372.setValue1(double_375);
	    doubleBinaryOperation_369.setSecondOperand(doubleValue_372);
	    doubleVariable_376.setName(string_378);
	    doubleBinaryOperation_369.setFirstOperand(doubleVariable_376);
	    doubleBinaryOperation_369.setOperator(doubleBinaryOperation$Op_332);
	    polynomialAddition_366.setSecondOperand(doubleBinaryOperation_369);
	    polynomialPower_382.setExponent(integer_386);
	    polynomialVariable_387.setVariable(polynomialVariable$Var_389);
	    polynomialPower_382.setBase(polynomialVariable_387);
	    polynomialAddition_379.setSecondOperand(polynomialPower_382);
	    polynomialPower_397.setExponent(integer_401);
	    polynomialVariable_402.setVariable(polynomialVariable$Var_299);
	    polynomialPower_397.setBase(polynomialVariable_402);
	    polynomialAddition_394.setSecondOperand(polynomialPower_397);
	    polynomialPower_403.setExponent(integer_407);
	    polynomialVariable_408.setVariable(polynomialVariable$Var_312);
	    polynomialPower_403.setBase(polynomialVariable_408);
	    polynomialAddition_394.setFirstOperand(polynomialPower_403);
	    polynomialAddition_379.setFirstOperand(polynomialAddition_394);
	    polynomialAddition_366.setFirstOperand(polynomialAddition_379);
	    polynomialSubtraction_353.setFirstOperand(polynomialAddition_366);
	    polynomialPower_348.setBase(polynomialSubtraction_353);
	    lightSource_67.setIntensity(float_100);
	    point3d_79.setZ(double_88);
	    point3d_79.setY(double_89);
	    point3d_79.setX(double_90);
	    polynomialPower_305.setExponent(integer_309);
	    polynomialVariable_310.setVariable(polynomialVariable$Var_312);
	    polynomialPower_305.setBase(polynomialVariable_310);
	    lightSource_69.setStatus(lightSource$Status_75);
	    lightSource_69.setIntensity(float_144);
	    point3d_127.setZ(double_136);
	    point3d_127.setY(double_137);
	    polynomialPower_292.setExponent(integer_296);
	    polynomialPower_292.setBase(polynomialVariable_297);
	    polynomialAddition_289.setSecondOperand(polynomialPower_292);
	    polynomialAddition_289.setFirstOperand(polynomialPower_305);
	    polynomialMultiplication_286.setSecondOperand(polynomialAddition_289);
	    doubleValue_325.setValue1(double_328);
	    doubleBinaryOperation_321.setSecondOperand(doubleValue_325);
	    doubleVariable_329.setName(string_331);
	    doubleBinaryOperation_321.setFirstOperand(doubleVariable_329);
	    doubleBinaryOperation_321.setOperator(doubleBinaryOperation$Op_332);
	    doubleBinaryOperation_317.setSecondOperand(doubleBinaryOperation_321);
	    doubleValue_338.setValue1(double_341);
	    doubleBinaryOperation_317.setFirstOperand(doubleValue_338);
	    doubleBinaryOperation_317.setOperator(doubleBinaryOperation$Op_342);
	    polynomialMultiplication_286.setFirstOperand(doubleBinaryOperation_317);
	    polynomialSubtraction_283.setSecondOperand(polynomialMultiplication_286);
	    polynomialSubtraction_283.setFirstOperand(polynomialPower_348);
	    cPUAlgebraicSurfaceRenderer_1.setSurfaceTotalDegree(integer_51);
	    cPUAlgebraicSurfaceRenderer_1.setSurfaceExpressionFamilyString(string_58);
	    cPUAlgebraicSurfaceRenderer_1.setSurfaceExpressionFamily(polynomialSubtraction_283);
	    material_23.setDiffuseIntensity(float_39);
	    material_23.setShininess(float_49);
	    material_23.setAmbientIntensity(float_50);
	    color3f_34.setZ(float_46);
	    color3f_34.setY(float_47);
	    color3f_34.setX(float_48);
	    matrix4d_244.setM03(double_277);
	    matrix4d_244.setM13(double_278);
	    matrix4d_244.setM23(double_279);
	    material_24.setDiffuseIntensity(float_499);
	    material_24.setShininess(float_509);
	    material_24.setAmbientIntensity(float_510);
	    lightSource_68.setStatus(lightSource$Status_75);
	    lightSource_68.setIntensity(float_123);
	    point3d_105.setZ(double_114);
	    point3d_105.setY(double_115);
	    point3d_105.setX(double_116);
	    hashMap_442.put(double_449, string_450);
	    hashMap_442.put(double_455, string_456);
	    color3f_494.setZ(float_506);
	    color3f_494.setY(float_507);
	    color3f_494.setX(float_508);
	    return cPUAlgebraicSurfaceRenderer_1;
	}
	catch (java.lang.Exception exception)
	{
	    throw new java.lang.RuntimeException(exception);
	}
    }

    public de.mfo.jsurfer.rendering.LightSource.Status lightSource$Status_75;
    public java.lang.String string_365;
    public javax.vecmath.Point3d point3d_79;
    public de.mfo.jsurfer.algebra.PolynomialPower polynomialPower_305;
    public java.lang.Double double_362;
    public de.mfo.jsurfer.algebra.PolynomialVariable polynomialVariable_310;
    public java.lang.Integer integer_352;
    public javax.vecmath.Point3d point3d_127;
    public de.mfo.jsurfer.algebra.PolynomialSubtraction polynomialSubtraction_283;
    public de.mfo.jsurfer.algebra.PolynomialPower polynomialPower_403;
    public de.mfo.jsurfer.rendering.cpu.CPUAlgebraicSurfaceRenderer cPUAlgebraicSurfaceRenderer_1;
    public de.mfo.jsurfer.rendering.LightSource lightSource_67;
    public de.mfo.jsurfer.algebra.DoubleVariable doubleVariable_363;
    public de.mfo.jsurfer.algebra.PolynomialPower polynomialPower_397;
    public java.lang.String string_378;
    public de.mfo.jsurfer.algebra.DoubleValue doubleValue_372;
    public java.lang.Double double_375;
    public javax.vecmath.Color3f color3f_34;
    public de.mfo.jsurfer.algebra.DoubleBinaryOperation doubleBinaryOperation_321;
    public de.mfo.jsurfer.rendering.Material material_23;
    public javax.vecmath.Matrix4d matrix4d_244;
    public de.mfo.jsurfer.rendering.Material material_24;
    public java.lang.Double double_89;
    public java.lang.Double double_88;
    public de.mfo.jsurfer.rendering.LightSource lightSource_69;
    public de.mfo.jsurfer.rendering.LightSource lightSource_68;
    public de.mfo.jsurfer.algebra.PolynomialVariable.Var polynomialVariable$Var_299;
    public de.mfo.jsurfer.algebra.PolynomialAddition polynomialAddition_379;
    public de.mfo.jsurfer.rendering.Camera camera_22;
    public java.lang.Float float_144;
    public java.lang.Double double_90;
    public java.lang.Double double_279;
    public java.lang.Double double_277;
    public java.lang.Double double_278;
    public java.lang.Float float_499;
    public de.mfo.jsurfer.algebra.PolynomialVariable polynomialVariable_402;
    public de.mfo.jsurfer.algebra.DoubleBinaryOperation doubleBinaryOperation_317;
    public java.lang.Double double_341;
    public de.mfo.jsurfer.algebra.PolynomialMultiplication polynomialMultiplication_286;
    public de.mfo.jsurfer.algebra.PolynomialVariable polynomialVariable_408;
    public de.mfo.jsurfer.algebra.PolynomialVariable polynomialVariable_387;
    public java.lang.String string_456;
    public de.mfo.jsurfer.algebra.PolynomialAddition polynomialAddition_289;
    public java.lang.Integer integer_386;
    public java.lang.String string_450;
    public de.mfo.jsurfer.algebra.PolynomialPower polynomialPower_382;
    public de.mfo.jsurfer.algebra.DoubleVariable doubleVariable_329;
    public javax.vecmath.Color3f color3f_494;
    public java.lang.Integer integer_309;
    public de.mfo.jsurfer.algebra.PolynomialAddition polynomialAddition_394;
    public de.mfo.jsurfer.algebra.PolynomialVariable polynomialVariable_297;
    public de.mfo.jsurfer.algebra.PolynomialVariable.Var polynomialVariable$Var_312;
    public java.lang.Double double_115;
    public java.lang.Double double_114;
    public java.lang.Float float_49;
    public java.lang.Integer integer_51;
    public de.mfo.jsurfer.algebra.PolynomialPower polynomialPower_348;
    public java.lang.Float float_46;
    public java.lang.Float float_47;
    public java.lang.Float float_48;
    public java.lang.Double double_116;
    public java.lang.Double double_328;
    public de.mfo.jsurfer.algebra.Simplificator simplificator_21;
    public java.lang.Float float_50;
    public de.mfo.jsurfer.algebra.PolynomialVariable.Var polynomialVariable$Var_389;
    public de.mfo.jsurfer.algebra.DoubleValue doubleValue_325;
    public java.util.Vector vector_514;
    public de.mfo.jsurfer.algebra.PolynomialAddition polynomialAddition_366;
    public de.mfo.jsurfer.algebra.DoubleBinaryOperation doubleBinaryOperation_369;
    public de.mfo.jsurfer.algebra.DoubleValue doubleValue_338;
    public java.lang.String string_331;
    public java.lang.Float float_123;
    public de.mfo.jsurfer.rendering.LightSource[] lightSource_array_25;
    public java.lang.String string_58;
    public java.lang.Double double_137;
    public java.lang.Double double_136;
    public javax.vecmath.Point3d point3d_105;
    public java.util.HashMap hashMap_442;
    public de.mfo.jsurfer.algebra.DoubleBinaryOperation doubleBinaryOperation_356;
    public java.lang.Float float_509;
    public java.lang.Float float_508;
    public java.lang.Float float_507;
    public de.mfo.jsurfer.algebra.DoubleBinaryOperation.Op doubleBinaryOperation$Op_342;
    public java.lang.Float float_506;
    public java.lang.Double double_449;
    public java.lang.Float float_39;
    public java.lang.Integer integer_401;
    public de.mfo.jsurfer.algebra.PolynomialSubtraction polynomialSubtraction_353;
    public java.lang.Integer integer_407;
    public de.mfo.jsurfer.algebra.PolynomialPower polynomialPower_292;
    public java.lang.Integer integer_296;
    public java.lang.Float float_100;
    public de.mfo.jsurfer.algebra.DoubleVariable doubleVariable_376;
    public de.mfo.jsurfer.algebra.DoubleBinaryOperation.Op doubleBinaryOperation$Op_332;
    public de.mfo.jsurfer.algebra.DoubleValue doubleValue_359;
    public java.lang.Double double_455;
    public java.lang.Float float_510;
}
